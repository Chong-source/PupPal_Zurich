"""A map of Zürich built using tkinter python library
Followed tutorial from: https://www.youtube.com/watch?v=qDO5ndZuibk
Tkinter documentation: https://github.com/TomSchimansky/TkinterMapView?tab=readme-ov-file#create-position-markers

"""
import csv
import os
import tkinter
from tkintermapview import TkinterMapView
from districts import District
import requests
import data_loader


def plot_locations(locations: list[tuple[float, float]]) -> None:
    """Plot each location in locations in the interactive map of Zürich

    Representation Invariants:
    - For each tuple t in the list, t[0] is the latitude of the location as a float
    - For each tuple t in the list, t[1] is the longtitude of the location as a float
    """
    for location in locations:
        map_widget.set_marker(location[0], location[1])


def write_district_locations(api_key: str, districts: set[District], csv_path: str) -> None:
    """A function that takes in a new file name, an API_key, and a set of districts to
    create a csv file that contains the latitude and longitude of each district in the following format:
    <name of place>,<latitude>,<longitude>. Pass in the sets of districts by using the load_district_data
    from data loader

    Representation Invariants:
    - districts must be generated by the function load_district_data method from data loader
    """
    if os.path.isfile(csv_path):
        raise FileExistsError  # File must not exist!
    with open(csv_path, 'w') as file:
        csv_writer = csv.writer(file)
        csv_writer.writerow(['district_name', 'latitude', 'longitude'])  # header
        for district in districts:
            search = (f"https://maps.googleapis.com/maps/api/geocode/json?"
                      f"address={district.district_name}%20Zürich%2C%20Switzerland&"
                      f"key={api_key}")
            response = (requests.get(search)).json()
            latitude = response["results"][0]["geometry"]["location"]['lat']
            longitude = response["results"][0]["geometry"]["location"]['lng']
            csv_writer.writerow([district.district_name, latitude, longitude])


if __name__ == '__main__':
    # Writing CSV file: Only needed once to create the csv file
    #   API_key = input("Input API key: ")
    #   district_data_path = input('Path to district data file: ')
    #   new_file_name = input("Input new csv file path: ")
    #   districts: set[District] = data_loader.load_district_data(district_data_path)
    #   write_district_locations(API_key, districts, new_file_name)

    # Create Tkinter window
    window = tkinter.Tk()
    window.geometry("600x600")
    window.title("Map_of_Zürich")
    window.resizable(False, False)

    # Create google map window
    map_widget = TkinterMapView(window, width=600, height=600, corner_radius=0)
    map_widget.pack(fill='both')

    # Setting the locaiton to Zürich
    map_widget.set_position(47.3769, 8.5417)
    map_widget.set_zoom(12)

    # Plot the locations on the map (examples)
    # marker_2 = map_widget.set_marker(47.384444284588675, 8.574511882827997, 'location1')
    # market_3 = map_widget.set_marker(47.376525305868704, 8.571999516647077, "location2")

    # Running the program
    window.mainloop()
